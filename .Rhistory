system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
#dframe$timestamp= as.POSIXct(dframe$timestamp,format="%Y-%m-%d %H:%M:%S", tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
#dframe$timestamp= as.POSIXct(dframe$timestamp,format="%Y-%m-%d %H:%M:%S", tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
#dframe$timestamp= as.POSIXct(dframe$timestamp,format="%Y-%m-%d %H:%M:%S", tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
})
rm(list=ls())
path="/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/daily/apFac_601.csv"
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
#dframe$timestamp= as.POSIXct(dframe$timestamp,format="%Y-%m-%d %H:%M:%S", tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
})
class(dframe)
class(dframe2)
rm(list=ls())
path="/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/daily/apFac_601.csv"
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= as.POSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
dframe2$timestamp= as.POSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= as.POSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
dframe2$timestamp= as.POSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= as.POSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
dframe2$timestamp= as.POSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= as.POSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
dframe2$timestamp= as.POSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= as.POSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2 <-fread(path)
dframe2$timestamp= as.POSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
?fread
install.packages(fasttime)
install.packages('fasttime')
library(fasttime)
ts <- as.character(.POSIXct(runif(1e4) * unclass(Sys.time())))
## convert them using as.POSIXct
system.time(a <- as.POSIXct(ts, "GMT"))
## same using the fast method
system.time(b <- fastPOSIXct(ts, "GMT"))
identical(a, b)
ts <- as.character(.POSIXct(runif(1e4) * unclass(Sys.time())))
## convert them using as.POSIXct
system.time(a <- as.POSIXct(ts, "GMT"))
## same using the fast method
system.time(b <- fastPOSIXct(ts, "GMT"))
identical(a, b)
a
system.time(a <- as.POSIXct(ts, "Asia/Kolkata"))
## same using the fast method
system.time(b <- fastPOSIXct(ts, "Asia/Kolkata"))
identical(a, b)
unclass(Sys.time() )
as.POSIXct(1445704220)
as.POSIXct(1445704220,origion="1970-01-01")
as.POSIXct(1445704220,origion=1970-01-01)
as.POSIXct(1445704220,origin=1970-01-01)
as.POSIXct(1445704220,origin=1970-01-01,tz="Asia/Kolata")
as.POSIXct(1445704220,origin=1970-01-01,tz="Asia/Kolkata")
as.POSIXct(1445704220,origin="1970-01-01",tz="Asia/Kolkata")
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= as.fastPOSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= fastPOSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
library(data.table)
#setwd("/Volumes/MacintoshHD2/Users/haroonr/Dropbox/R_codesDirectory")
#library(zoo) # required for finding missing values
path="/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/daily/apFac_601.csv"
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= fastPOSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2<-read.csv(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= fastPOSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2<-read.csv(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= fastPOSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2<-read.csv(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
all.equal(dframe,dframe2)
path="/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/default/apFac_601.csv"
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= fastPOSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2<-read.csv(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
all.equal(dframe,dframe2)
path="/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/default/apFac_601.csv"
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= as.POSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
system.time({
dframe2<-read.csv(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp, tz="Asia/Kolkata")
})
all.equal(dframe,dframe2)
head(dframe)
head(dframe2)
system.time({
dframe2<-read.csv(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)
})
head(dframe2)
Sys.setenv(TZ="Asia/Kolkata")
system.time({
dframe2<-read.csv(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)
})
head(dframe2)
Sys.setenv(TZ="Asia/Kolkata")
system.time({
dframe2<-fread(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)
})
head(dframe2)
Sys.setenv(TZ="Asia/Kolkata")
system.time({
dframe2<-fread(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)
})
Sys.setenv(TZ="Asia/Kolkata")
system.time({
dframe2<-fread(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)
})
all.w
all.equal(dframe,dframe2)
str(dframe)
str(dframe2)
dframe2$timestamp= fastPOSIXct(dframe2$timestamp-21600)
head(dframe2)
x<- dframe2$timestamp[1]
x
y=x-21600
y
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)-21600
head(dframe2)
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)-19800
head(dframe2)
dframe2<-fread(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)
head(dframe2)
x
y
x-y
z=x-19800
z
z-x
x-z
class(dframe2$timestamp)
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)-19800
head(dframe2)
Sys.timezone()
Sys.getenv('TZ')
library(data.table)
#library(zoo) # required for finding missing values
path="/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/default/apFac_601.csv"
dframe2<-fread(path,head=TRUE,sep=",")
head(dframe2)
typeof(dframe2$timestamp)
class(dframe2$timestamp)
dframe2$timestamp[1]
x<- dframe2$timestamp[1:5]
x
as.POSIXct(x)
fastPOSIXct(x)
library(fasttime)
fastPOSIXct(x)
y=as.POSIXct(x)
z=fastPOSIXct(x)
all.equal(y,z)
fastPOSIXct(x,tz="GMT")
P=fastPOSIXct(x,tz="GMT")
p=fastPOSIXct(x,tz="GMT")
all.equal(y,p)
head(y)
head(p)
fastPOSIXct(x-19800)
x
fastPOSIXct(as.numeric(x)-19800)
fastPOSIXct(x)-19800
p=fastPOSIXct(x)-19800
p
all.equal(y,p)
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)-19800
head(dframe2)
dframe2$timestamp[1]
View(dframe2)
sessionInfo()
path="/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/default/apFac_601.csv"
system.time({
dframe<-read.csv(path,head=TRUE,sep=",")
dframe$timestamp= as.POSIXct(dframe$timestamp, tz="Asia/Kolkata")
})
Sys.setenv(TZ="Asia/Kolkata")
system.time({
dframe2<-fread(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)-19800
})
all.equal(dframe,dframe2)
head(dframe)
head(dframe2)
tail(dframe)
tail(dframe2)
all.equal(dframe$timestamp,dframe2$timestamp)
all.equal(dframe$power,dframe2$power)
shiny::runApp('apps/energyVis')
shiny::runApp('apps/energyVis')
shiny::runApp('apps/energyVis')
shiny::runApp('apps/energyVis')
shiny::runApp('apps/energyVis')
library(ggplot2)
library(scales)
library(data.table)
#setwd("/Volumes/MacintoshHD2/Users/haroonr/Dropbox/R_codesDirectory")
#library(zoo) # required for finding missing values
path="/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/default/apFac_601.csv"
system.time({
dframe2<-fread(path,head=TRUE,sep=",")
dframe2$timestamp= fastPOSIXct(dframe2$timestamp)-19800
})
system.time(xx<-dframe2)
shiny::runApp('apps/energyVis')
shiny::runApp('apps/energyVis')
install.packages('ggvia')
install.packages('ggvis')
library(ggvis)
mtcars %>%
ggvis(x = ~wt, y = ~mpg, size.brush := 400) %>%
layer_points() %>%
handle_brush(function(items, page_loc, session, ...) {
show_tooltip(session, page_loc$r + 5, page_loc$t, html = nrow(items))
})
shiny::runApp('apps/energyVis')
install.packages(Cairo)
install.packages('Cairo')
getwd()
setwd("/Volumes/MacintoshHD2/Users/haroonr/Dropbox/R_codesDirectory/apps/")
runApp(zoomapp)
getwd()
setwd("/Volumes/MacintoshHD2/Users/haroonr/Dropbox/R_codesDirectory/apps")
runApp(zoomapp)
runApp(energyvis)
runApp(energyVis)
getwd()
setwd("/Volumes/MacintoshHD2/Users/haroonr/Dropbox/R_codesDirectory/apps/")
runApp('enrgyVis')
runApp(energyVis)
runApp(energyvis)
runApp('energyVis')
runApp('zoomapp')
library(shiny)
ui <- basicPage(
plotOutput("plot1", click = "plot_click"),
verbatimTextOutput("info")
)
server <- function(input, output) {
output$plot1 <- renderPlot({
plot(mtcars$wt, mtcars$mpg)
})
output$info <- renderText({
paste0("x=", input$plot_click$x, "\ny=", input$plot_click$y)
})
}
shinyApp(ui, server)
ui <- basicPage(
plotOutput("plot1",
click = "plot_click",
dblclick = "plot_dblclick",
hover = "plot_hover",
brush = "plot_brush"
),
verbatimTextOutput("info")
)
server <- function(input, output) {
output$plot1 <- renderPlot({
plot(mtcars$wt, mtcars$mpg)
})
output$info <- renderText({
xy_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("x=", round(e$x, 1), " y=", round(e$y, 1), "\n")
}
xy_range_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("xmin=", round(e$xmin, 1), " xmax=", round(e$xmax, 1),
" ymin=", round(e$ymin, 1), " ymax=", round(e$ymax, 1))
}
paste0(
"click: ", xy_str(input$plot_click),
"dblclick: ", xy_str(input$plot_dblclick),
"hover: ", xy_str(input$plot_hover),
"brush: ", xy_range_str(input$plot_brush)
)
})
}
shinyApp(ui, server)
shiny::runApp('zoomapp')
runApp(list(
ui = fluidPage(
fluidRow(
column(6
, fluidRow(
column(6, style = "background-color:yellow;", div(style = "height:300px;"))
, column(6, style = "background-color:green", div(style = "height:300px;"))
)
, fluidRow(
column(12, style = "background-color:red;", div(style = "height:300px;"))
)
)
, column(6, style = "background-color:blue;", div(style = "height:600px;"))
)
),
server = function(input, output) {
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6
, fluidRow(
column(6, style = "background-color:yellow;", div(style = "height:300px;"))
, column(6, style = "background-color:green", div(style = "height:300px;"))
)
, fluidRow(
column(12, style = "background-color:red;", div(style = "height:300px;"))
)
)
, column(6, style = "background-color:blue;", div(style = "height:600px;"))
)
),
server = function(input, output) {
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6
, fluidRow(
column(6, style = "background-color:yellow;", div(style = "height:300px;"))
, column(6, style = "background-color:green", div(style = "height:300px;"))
)
, fluidRow(
column(12, style = "background-color:red;", div(style = "height:300px;"))
)
)
, column(6, style = "background-color:blue;", div(style = "height:600px;"))
)
),
server = function(input, output) {
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6
, fluidRow(
column(6, style = "background-color:yellow;", div(style = "height:300px;"))
, column(6, style = "background-color:green", div(style = "height:300px;"))
)
, fluidRow(
column(12, style = "background-color:red;", div(style = "height:300px;"))
)
)
, column(6, style = "background-color:blue;", div(style = "height:600px;"))
)
),
server = function(input, output) {
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6, style = "background-color:blue;", div(style = "height:600px;")),
column(6
, fluidRow(
column(6, style = "background-color:yellow;", div(style = "height:300px;"))
, column(6, style = "background-color:green", div(style = "height:300px;"))
)
, fluidRow(
column(12, style = "background-color:red;", div(style = "height:300px;"))
)
)
)
),
server = function(input, output) {
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6, style = "background-color:blue;", div(style = "height:600px;")),
column(6
, fluidRow(
column(6, style = "background-color:yellow;", div(style = "height:300px;"))
# , column(6, style = "background-color:green", div(style = "height:300px;"))
)
, fluidRow(
column(12, style = "background-color:red;", div(style = "height:300px;"))
)
)
)
),
server = function(input, output) {
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6, style = "background-color:blue;", div(style = "height:600px;")),
column(6
, fluidRow(
column(12, style = "background-color:yellow;", div(style = "height:300px;"))
# , column(6, style = "background-color:green", div(style = "height:300px;"))
)
, fluidRow(
column(12, style = "background-color:red;", div(style = "height:300px;"))
)
)
)
),
server = function(input, output) {
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(4, style = "background-color:blue;", div(style = "height:600px;")),
column(6
, fluidRow(
column(12, style = "background-color:yellow;", div(style = "height:300px;"))
# , column(6, style = "background-color:green", div(style = "height:300px;"))
)
, fluidRow(
column(12, style = "background-color:red;", div(style = "height:300px;"))
)
)
)
),
server = function(input, output) {
}
))
shiny::runApp('zoomapp')
shiny::runApp('energyVis')
shiny::runApp('energyVis')
shiny::runApp('energyVis')
shiny::runApp('energyVis')
?coord_cartesian
