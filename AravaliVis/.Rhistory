})
pdf("dd.pdf")
lapply(plots,function(x) plot(x))
dev.off()
subset1 <- dfs["2016-09-1 00:00:00/2016-09-22 23:59:59"]
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
daydat <- split.xts(subset2,f="days",k=1)
sframe <- sfile[,c(8,1,3,4,5)]
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
lapply(plots,function(x) plot(x))
daydat <- split.xts(subset2,f="days",k=1)
plots <- lapply(daydat, function(x) {
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
clusob <- kmeans(t(x), 6)# forced 6 clusters
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
length(daydat)
daydat[[1]]
daydat[[2]]
daydat[[3]]
daydat[[4]]
head(dfs)
subset1 <- dfs["2016-09-1 00:00:00/2016-09-22 23:59:59"]
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
daydat <- split.xts(subset2,f="days",k=1)
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
clusob <- kmeans(t(x), 6)# forced 6 clusters
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
plots <- lapply(daydat, function(x) {
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
clusob <- kmeans(t(x), 6)# forced 6 clusters
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
subset1 <- dfs["2016-09-01 00:00:00/2016-09-22 23:59:59"]
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
daydat <- split.xts(subset2,f="days",k=1)
sframe <- sfile[,c(8,1,3,4,5)]
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
daydat <- split.xts(subset2,f="days",k=1)
daydat[[1]]
subset2
sframe
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
subset2
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
daydat <- split.xts(subset2,f="days",k=1)
daydat[[1]]
plots <- lapply(daydat, function(x) {
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
clusob <- kmeans(t(x), 6)# forced 6 clusters
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
pdf("dd.pdf")
lapply(plots,function(x) plot(x))
dev.off()
daydat[[1]]
daydat[[7]]
daydat[[8]]
plots[[1]]
plot(plots[[1]])
rm(plots)
plots <- lapply(daydat, function(x) {
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
cat("HE:")
clusob <- kmeans(t(x), 6)# forced 6 clusters
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
plots[[1]]
daydat[[4]]
summary(daydat[[4]])
summary(daydat[[3]])
summary(is.na(daydat[[3]]))
table(is.na(daydat[[3]]))
table(is.na(daydat[[4]]))
table(is.na(daydat[[5]]))
table(is.na(daydat[[6]]))
pam(daydat[[4]],6)
cc<-pam(daydat[[4]],6)
cc$clustering
cc<-pam(t(daydat[[4]]),6)
cc$clustering
plots <- lapply(daydat, function(x) {
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
cat("HE:")
clusob <- pam(t(x), 6)# forced 6 clusters
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
daydat[[7]]
is.na(daydat[[7]])
table(is.na(daydat[[7]]))
x <- daydat[[7]]
clusob <- pam(t(x), 6)# forced 6 clusters
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
clusob$clustering
clusob$cluster
clusob$clustering
table(clusob$clustering)
str(clusob$clustering)
sframe
levels(labels)
view_energy_contribution(x, labels, sframe)
df=x
df_form <- data.frame(timestamp = index(df),coredata(df))
df_long <- reshape2::melt(df_form,id.vars = "timestamp")
df_long$cluslabel <- rep(labels, each = dim(df)[1])
# Let us  construct a table which will show the %age of energy consumed by a cluster against
# the aggregate
agg_consump <- xts(rowSums(df,na.rm = FALSE),index(df))
clusters <- gtools::mixedsort(unique(df_long$cluslabel))
for(i in 1:length(clusters)) {
dat <- df_long[df_long$cluslabel==as.factor(clusters[i]),]
temp <- reshape2::dcast(dat,timestamp~variable)
temp_data <- subset(temp,select = -timestamp)
#temp_xts <- xts(temp_data,temp$timestamp)
temp_xts <- xts(rowSums(temp_data,na.rm = FALSE),temp$timestamp)
agg_consump <- cbind(agg_consump,temp_xts)
}
colnames(agg_consump) <- c("Aggregate",c(1:length(clusters)))
#percentage energy consumed by each home against the total consumption of building
per_contribuion <- apply(agg_consump[,2:dim(agg_consump)[2]],2,function(x) mean(x/agg_consump[,1])*100)
tab_stat <- data.frame(table(labels),round(per_contribuion,2))
colnames(tab_stat) <- c("Cluster#","Apartments","Energy_Consumed(%)")
# Add no. of people to each residing in each cluster
sframe$cluster <- as.factor(sframe$cluster)
clnames <- gtools::mixedsort(unique(labels))
tab_stat$people <- sapply(clnames,function(x) {
colSums(sframe[sframe$cluster == x,]["total"],na.rm = TRUE)
})
levels(clnames)
levels(sframe$cluster)
clnames
labels
sframe
rm(list=ls())
dev.off()
readfile <- "/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/aravali_iitb/oct/hourly/all_withflatid_Aravalimeters_Sept2016.csv"
df <- fread(readfile)
dfs <-  xts(df[,2:dim(df)[2]],fastPOSIXct(df$timestamp)-19800)
net_building_conusmption(dfs)
four_day_aggregate_consumption_plot(dfs)
rm(list=ls())
readfile <- "/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/aravali_iitb/oct/hourly/all_withflatid_Aravalimeters_Sept2016.csv"
df <- fread(readfile)
dfs <-  xts(df[,2:dim(df)[2]],fastPOSIXct(df$timestamp)-19800)
net_building_conusmption(dfs)
four_day_aggregate_consumption_plot(dfs)
#range of dates for which we need to do clustering
subset1 <- dfs["2016-09-01 00:00:00/2016-09-22 23:59:59"]
surfile <- "/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/aravali_iitb/surveydata.csv"
sfile <- read.csv(surfile)
colnames(sfile)
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
table(duplicated(sframe$flatId))
# Keep only those homes for which we have survey data
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
daydat <- split.xts(subset2,f="days",k=1)
view_energy_contribution <- function(df,labels, sframe) {
#this function shows consumption of each cluster and a table with statistics
df_form <- data.frame(timestamp = index(df),coredata(df))
df_long <- reshape2::melt(df_form,id.vars = "timestamp")
df_long$cluslabel <- rep(labels, each = dim(df)[1])
# Let us  construct a table which will show the %age of energy consumed by a cluster against
# the aggregate
agg_consump <- xts(rowSums(df,na.rm = FALSE),index(df))
clusters <- gtools::mixedsort(unique(df_long$cluslabel))
for(i in 1:length(clusters)) {
dat <- df_long[df_long$cluslabel==as.factor(clusters[i]),]
temp <- reshape2::dcast(dat,timestamp~variable)
temp_data <- subset(temp,select = -timestamp)
#temp_xts <- xts(temp_data,temp$timestamp)
temp_xts <- xts(rowSums(temp_data,na.rm = FALSE),temp$timestamp)
agg_consump <- cbind(agg_consump,temp_xts)
}
colnames(agg_consump) <- c("Aggregate",c(1:length(clusters)))
#percentage energy consumed by each home against the total consumption of building
per_contribuion <- apply(agg_consump[,2:dim(agg_consump)[2]],2,function(x) mean(x/agg_consump[,1])*100)
tab_stat <- data.frame(table(labels),round(per_contribuion,2))
colnames(tab_stat) <- c("Cluster#","Apartments","Energy_Consumed(%)")
# Add no. of people to each residing in each cluster
sframe$cluster <- as.factor(sframe$cluster)
clnames <- gtools::mixedsort(unique(labels))
tab_stat$people <- sapply(clnames,function(x) {
colSums(sframe[sframe$cluster == x,]["total"],na.rm = TRUE)
})
library(gridExtra)
tbl <- tableGrob(tab_stat,rows = NULL,theme=ttheme_default(base_size = 8,padding = unit(c(3, 3), "mm")))
g <- ggplot(df_long, aes(timestamp, value/1000, col = cluslabel, group = variable))
g <- g + labs(y ="power (kW)",x="Hour of day")
g <- g + stat_summary(data = df_long,aes(timestamp,value/1000,group = cluslabel,col = cluslabel),
fun.y = sum, geom="line",inherit.aes = FALSE)
g <- g + stat_summary(data = df_long,aes(timestamp,value/1000),
fun.y = sum, geom="line",inherit.aes = FALSE)
g <- g + scale_x_datetime(breaks = date_breaks("2 hour"), labels = date_format("%H",tz="Asia/Kolkata")) # use scales package
g <- g + theme(axis.text.x = element_text(angle = 0,hjust = 1)) + ggtitle(as.character(as.Date(df_long$timestamp[10])))
# g <- g + guides(col=guide_legend(nrow=2,byrow = TRUE))+theme(axis.text = element_text(color="Black"),legend.position = c(0.20,0.80),legend.title=element_blank(),legend.background=element_rect(fill=alpha('white',0.3)),legend.text=element_text(size = 8))
#g <- g + annotation_custom(tableGrob(tab_stat))
return(arrangeGrob(g,tbl,as.table=FALSE,nrow=2,heights = c(4,4),widths=c(8,3)))
}
plots <- lapply(daydat, function(x) {
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
cat("HE:")
clusob <- pam(t(x), 6)# forced 6 clusters
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
plots <- lapply(daydat, function(x) {
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
cat("HE:")
clusob <- pam(t(x), 6)# forced 6 clusters
cat("X;")
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
x
head(daydat[[7]])
summary(daydat[[7]])
x
x<- daydat[[7]]
clusob <- pam(t(x), 6)# forced 6 clusters
cat("X;")
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
sframe
labels
str(labels)
sframe$cluster <- clusob$cluster[sframe$flatId]
sframe
str(frame)
str(sframe)
str(labels)
lables
labels
rm(sframe)
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
sframe
labels
labels["F217"]
labels["F218"]
labels["F212"]
sapply(labels, x)
sapply(labels, function(x) x)
sapply(labels, function(x) return(x))
labels
levels(labels)
labels["217"]
labels["F217"]
labels["F218"]
sframe
colnames(x)
duplicated(x)
duplicated(colnames(x))
meters <- c("X1", "X3", "X4", "X5", "X6", "X8", "X10", "X11", "X16", "X17", "X18","X21", "X22", "X23", "X24", "X25", "X26", "X27", "X28", "X29", "X30", "X31", "X32", "X34", "X35", "X36", "X37", "X200", "X207", "X208", "X209", "X211", "X212", "X214", "X218", "X219", "X 221", "X223", "X224", "X225", "X226", "X227", "X228", "X229", "X231", "X233", "X234", "X235", "X236", "X237", "X238", "X240", "X241", "X242", "X243","X244", "X245", "X246", "X247")
flatid <- c(216,217,210,220,222,232,239,11,249,248,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,250,207,208,209,211,212,214,218,219,221,223,224,225,226,227,228,229,231,233,234,235,236,237,238,240,241,242,243,244,245,246,247)
flatid <- paste0('F',flatid)
newnames <- plyr::mapvalues(meters,from = meters, to = flatid)
length(newnames)
readfile <- "/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/aravali_iitb/oct/hourly/all_Aravalimeters_Sept2016.csv"
df <- fread(readfile)
colnames(df)
df$X217
df$3
df$X3
meters <- c("X1", "X3", "X4", "X5", "X6", "X8", "X10", "X11", "X16", "X17", "X18","X21", "X22", "X23", "X24", "X25", "X26", "X27", "X28", "X29", "X30", "X31", "X32", "X34", "X35", "X36", "X37", "X200", "X207", "X208", "X209", "X211", "X212", "X214", "X218","X217","X219", "X 221", "X223", "X224", "X225", "X226", "X227", "X228", "X229", "X231", "X233", "X234", "X235", "X236", "X237", "X238", "X240", "X241", "X242", "X243","X244", "X245", "X246", "X247")
flatid <- c(216,3,210,220,222,232,239,11,249,248,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,250,207,208,209,211,212,214,217,218,219,221,223,224,225,226,227,228,229,231,233,234,235,236,237,238,240,241,242,243,244,245,246,247)
flatid <- paste0('F',flatid)
flatid
newnames <- plyr::mapvalues(meters,from = meters, to = flatid)
newnames
dim(newnames)
length(newnames)
dim(df)
colnames(df) <- c("timestamp",newnames)
write.csv(df, "/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/aravali_iitb/oct/hourly/all_withflatid_Aravalimeters_Sept2016.csv",row.names = FALSE)
readfile <- "/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/aravali_iitb/oct/hourly/all_withflatid_Aravalimeters_Sept2016.csv"
df <- fread(readfile)
readfile <- "/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/aravali_iitb/oct/hourly/all_withflatid_Aravalimeters_Sept2016.csv"
df <- fread(readfile)
dfs <-  xts(df[,2:dim(df)[2]],fastPOSIXct(df$timestamp)-19800)
net_building_conusmption(dfs)
four_day_aggregate_consumption_plot(dfs)
#range of dates for which we need to do clustering
subset1 <- dfs["2016-09-01 00:00:00/2016-09-22 23:59:59"]
surfile <- "/Volumes/MacintoshHD2/Users/haroonr/Detailed_datasets/aravali_iitb/surveydata.csv"
sfile <- read.csv(surfile)
colnames(sfile)
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
table(duplicated(sframe$flatId))
sframe$flatId
is.duplicated(sframe$flatId)
duplicated(sframe$flatId)
sframe
?subset
sframe[-sframe$flatId=="F236",]
sframe[-sframe$flatId=="F236"]
sframe[- sframe$flatId=="F236"]
sframe[,-sframe$flatId=="F236"]
sframe[,-sframe$flatId==F236]
sframe[sframe$flatId==F236]
sframe[sframe$flatId=="F236"]
sframe[sframe$flatId=="F236",]
sframe[-sframe$flatId=="F236",]
sframe[sframe$flatId!="F236",]
sframe <- sframe[sframe$flatId!="F236",]#currently, there is duplicate of it
table(duplicated(sframe$flatId))
# Keep only those homes for which we have survey data
subset2 <- subset1[,colnames(subset1) %in% sframe$flatId]
daydat <- split.xts(subset2,f="days",k=1)
plots <- lapply(daydat, function(x) {
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
cat("HE:")
clusob <- pam(t(x), 6)# forced 6 clusters
cat("X;")
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
daydat[[10]]
all(is.na(daydat[[10]]))
all(is.na(daydat[[11]]))
all(is.na(daydat[[12]]))
all(is.na(daydat[[9]]))
all(is.na(daydat[[10]]))
if(all(is.na(daydat[[10]])))
return(NULL)
lots <- lapply(daydat, function(x) {
if(all(is.na(x)))
return(NULL)
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
cat("HE:")
clusob <- pam(t(x), 6)# forced 6 clusters
cat("X;")
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
pdf("dd.pdf")
lapply(plots,function(x) plot(x))
dev.off()
pdf("dd.pdf")
lapply(plots,function(x) plot(x))
dev.off()
pdf("dd.pdf")
lapply(plots,function(x) plot(x))
dev.off()
plots[[1]]
plot(plots[[1]])
plots <- lapply(daydat, function(x) {
if(all(is.na(x))) # for days where entire data is missing
return(NULL)
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
cat("HE:")
clusob <- pam(t(x), 6)# forced 6 clusters
cat("X;")
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
plots[[1]]
pdf("dd.pdf")
lapply(plots,function(x) plot(x))
dev.off()
plots[[12]]
plots[[11]]
plots[[10]]
lapply(plots,is.null)
sapply(plots,is.null)
status <- sapply(plots,is.null)
plots <- lapply(daydat, function(x) {
if(all(is.na(x))) # for days where entire data is missing
return(0)
sframe <- sfile[,c(8,1,3,4,5)]
sframe$flatId <- paste0('F',sframe$flatId)
sframe$total <- rowSums(sframe[,2:5])
set.seed(123)
temp <- apply(x,1,function(x) all(is.na(x)))
x <- x[!temp,]
cat("HE:")
clusob <- pam(t(x), 6)# forced 6 clusters
cat("X;")
labels <- as.factor(clusob$cluster)
# add cluster no. to each row in sframe
sframe$cluster <- clusob$cluster[sframe$flatId]
res <- view_energy_contribution(x, labels, sframe)
rm(sframe)
return(res)
})
sapply(plots,is.null)
pdf("dd.pdf")
lapply(plots,function(x) plot(x))
dev.off()
shiny::runApp('R_Codes/apps/Aravali_app')
rm(list=ls())
runApp('R_Codes/apps/AravaliVis')
